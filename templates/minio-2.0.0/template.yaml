

templates:
  - name: minio
    version: 2.0.0
    parameters:
      rootUser: # TBD
      rootPassword: # TBD
      storage:
        driveSize: # TBD
        replicas: # TBD
        drivesPerNode: 1
        pools: 1
      namespace: # TBD
      ingresses:
        console: true
        unsec: false
      protected: true
      ldap:
    parametersSchema:
      file: ./_parameters_schema_.yaml
    contextSchema:
      file: ./_context_schema_.yaml
    usage: |
      {{ .Meta.templateRelease.name }} S3 server in single mode
      <ul>
      <li>
      The Minio console can be accessed using <a href="{{ .Parameters.ingressName }}-console.{{ .Context.ingress.url }}">this link</a>
      </li>
      <li>
      You can configure an admin alias for the 'mc' CLI with the following command:
      <code>mc alias set {{ .Meta.templateRelease.name }} https://{{ .Parameters.ingressName }}-console.{{ .Context.ingress.url }} {{ .Parameters.admin.rootUser }} {{ .Parameters.admin.rootPassword }}</code>
      </li>
      {{- if .Parameters.ldap }}
      <li>
      This server is use LDAP authentication from '{{ .Parameters.ldap }}'
      </li>
      {{- end }}
      </ul>
    body: |
      componentReleases:
      - name: {{ .Meta.templateRelease.name }}
        namespace: {{ .Parameters.namespace }}
        component:
          name: minio
          version: 2.0.0
          protected: {{ .Parameters.protected }}
          parameters: 
            rootUser: {{ .Parameters.rootUser }}
            rootPassword: {{ .Parameters.rootPassword }}
            storage:
              driveSize: {{ .Parameters.storage.driveSize }}
              replicas:  {{ .Parameters.storage.replicas }}
              drivesPerNode: {{ .Parameters.storage.drivesPerNode }}
              pools: {{ .Parameters.storage.pools }}
            clusterIssuer: {{ .Context.certificateIssuer.internal }}
            storageClass: {{ .Context.storageClass.data }}
            ingresses:
            {{- if eq .Context.certificateIssuer.public .Context.certificateIssuer.internal }}
              passthrough:
                enabled: true
                url: {{ .Meta.templateRelease.name }}.{{ .Context.ingress.url }}
              alternate:
                enabled: false
            {{- else }}
              passthrough:
                enabled: true
                url: {{ .Meta.templateRelease.name }}-ptr.{{ .Context.ingress.url }}
              alternate:
                enabled: true
                url: {{ .Meta.templateRelease.name }}.{{ .Context.ingress.url }}
                clusterIssuer: {{ .Context.certificateIssuer.public }}
            {{- end }}
              console:
                enabled: {{ .Parameters.ingresses.console }}
                url: {{ .Meta.templateRelease.name }}-console.{{ .Context.ingress.url }}
                clusterIssuer: {{ .Context.certificateIssuer.public }}
              unsec:
                enabled: {{ .Parameters.ingresses.unsec }}
                url: {{ .Meta.templateRelease.name }}-unsec.{{ .Context.ingress.url }}
            {{- if .Parameters.ldap }}
            {{- toYaml (get .Context.minio.ldapSettings  .Parameters.ldap ) | nindent 6 }}
            {{- end }}          

      

